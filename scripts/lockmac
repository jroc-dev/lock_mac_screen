#!i/bin/env bash

printusage () {
    echo "Usage: lockmac [-s] [-l] [-c] [-sc] [-i] [-in] [-un]"
    echo ""
    echo "       -s, --sleep   : sleep the display"
    echo "       -l, --lock    : lock the display"
    echo "       -c, --close   : close all windows"
    echo "       -sc, --screen : screen capture"
    echo "       -i, --itunes  : open itunes"
    echo ""
    echo "Developer Tools Installation"
    echo "       -in, --inode  : install node"
    echo "       -un, --unode  : uninstall node"
}

SLEEP_COMPUTER=false
LOGOUT_COMPUTER=false
CLOSE_WINDOWS=false
SCREEN_CAPTURE=false
OPEN_ITUNES=false
INSTALL_NODE=false
UNINSTALL_NODE=false

for i in "$@"
do
    case $i in
        --help|-h)
            printusage
            exit 1
            ;;
        --sleep|-s)
            SLEEP_COMPUTER=true
            shift
            ;;
        --lock|-l)
	    LOGOUT_COMPUTER=true
            shift
            ;;
        --close|-c)
            CLOSE_WINDOWS=true
            shift
            ;;
        --screen|-sc)
            SCREEN_CAPTURE=true
            shift
            ;;
        --itunes|-i)
            OPEN_ITUNES=true
            shift
            ;;
        --inode|-in)
            INSTALL_NODE=true
            shift
            ;;
        --unode|-un)
            UNINSTALL_NODE=true
            shift
            ;;
        *)
            printusage
            exit 1
            ;;
    esac
done

# Sleep computer
if [[ $SLEEP_COMPUTER=true ]] ; then

	open -a ScreenSaverEngine

fi

# Logout computer
if [[ $LOGOUT_COMPUTER = true ]] ; then
        osascript -e 'tell application "System Events"
     		      keystroke "q" using {command down, shift down, option down}
	end tell'
fi

# Close all windows
if [[ $CLOSE_WINDOWS = true ]] ; then
	osascript -e 'tell application "Finder"
		close every window
	end tell'
fi

#Screencapture and open in preview
if [[ $SCREEN_CAPTURE = true ]] ; then
	screencapture -T -P image.png;
fi

# Open iTunes
if [[ $OPEN_ITUNES = true ]] ; then

	osascript -e "tell application \"iTunes\" to activate"
fi

#Install node
if [[ $INSTALL_NODE = true ]] ; then
	ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)";
	brew install node;
        brew upgrade node;
        brew update;
fi

#Uninstall node
if [[ UNINSTALL_NODE = true ]] ; then 
	brew uninstall node;
fi


# 

exit 0
